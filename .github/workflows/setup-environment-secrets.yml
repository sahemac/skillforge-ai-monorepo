# .github/workflows/setup-environment-secrets.yml
name: "Utility - Environment Secrets Setup Guide"

on:
  workflow_dispatch:
    inputs:
      show_secrets_guide:
        description: 'Show secrets setup guide'
        type: boolean
        default: true

jobs:
  show-secrets-guide:
    name: Environment Secrets Setup Guide
    runs-on: ubuntu-latest
    if: ${{ inputs.show_secrets_guide }}
    
    steps:
      - name: Secrets Setup Guide
        run: |
          echo "## 🔐 Required Secrets for SkillForge AI Deployment" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Database Secrets" >> $GITHUB_STEP_SUMMARY
          echo "Configure these secrets in your GitHub repository settings:" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Staging Environment:**" >> $GITHUB_STEP_SUMMARY
          echo "- \`DATABASE_URL_STAGING\`: PostgreSQL connection string for staging" >> $GITHUB_STEP_SUMMARY
          echo "  - Format: \`postgresql+asyncpg://user:password@host:port/database\`" >> $GITHUB_STEP_SUMMARY
          echo "  - Example: \`postgresql+asyncpg://skillforge_user:secure_password@staging-db.example.com:5432/skillforge_staging\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Production Environment:**" >> $GITHUB_STEP_SUMMARY
          echo "- \`DATABASE_URL_PRODUCTION\`: PostgreSQL connection string for production" >> $GITHUB_STEP_SUMMARY
          echo "  - Format: \`postgresql+asyncpg://user:password@host:port/database\`" >> $GITHUB_STEP_SUMMARY
          echo "  - Example: \`postgresql+asyncpg://skillforge_user:ultra_secure_password@prod-db.example.com:5432/skillforge_prod\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Google Cloud Secrets" >> $GITHUB_STEP_SUMMARY
          echo "- \`GCP_PROJECT_ID\`: Your Google Cloud Project ID" >> $GITHUB_STEP_SUMMARY
          echo "- \`GCP_WIF_PROVIDER\`: Workload Identity Federation provider" >> $GITHUB_STEP_SUMMARY
          echo "- \`GCP_CICD_SERVICE_ACCOUNT\`: Service account for CI/CD" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### How to Add Secrets" >> $GITHUB_STEP_SUMMARY
          echo "1. Go to your repository on GitHub" >> $GITHUB_STEP_SUMMARY
          echo "2. Navigate to **Settings** → **Secrets and variables** → **Actions**" >> $GITHUB_STEP_SUMMARY
          echo "3. Click **New repository secret**" >> $GITHUB_STEP_SUMMARY
          echo "4. Add each secret with its corresponding value" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Database URL Security Notes" >> $GITHUB_STEP_SUMMARY
          echo "⚠️  **Important Security Guidelines:**" >> $GITHUB_STEP_SUMMARY
          echo "- Use strong, unique passwords for each environment" >> $GITHUB_STEP_SUMMARY
          echo "- Enable SSL/TLS connections when possible" >> $GITHUB_STEP_SUMMARY
          echo "- Use database user accounts with minimal required permissions" >> $GITHUB_STEP_SUMMARY
          echo "- Regularly rotate database passwords" >> $GITHUB_STEP_SUMMARY
          echo "- Never commit database URLs to your repository" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Validation" >> $GITHUB_STEP_SUMMARY
          echo "After setting up secrets, the migration workflow will:" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Validate database connectivity before migration" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Test database permissions" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Provide detailed error messages if connection fails" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Support automatic rollback on migration failures" >> $GITHUB_STEP_SUMMARY