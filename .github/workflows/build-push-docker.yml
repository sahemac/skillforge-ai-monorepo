name: "Reusable - Build, Scan, and Push Docker Image"
on:
  workflow_call:
    inputs:
      image_name:
        description: 'The name of the docker image without the tag'
        required: true
        type: string
      dockerfile_path:
        description: 'The path to the Dockerfile'
        required: true
        type: string
      gcp_workload_identity_provider:
        description: 'The WIF provider from GCP'
        required: true
        type: string
      gcp_service_account:
        description: 'The GCP service account to impersonate'
        required: true
        type: string
    secrets:
      GCP_PROJECT_ID:
        required: true
      GCP_WIF_PROVIDER:
        required: true
      GCP_CICD_SERVICE_ACCOUNT:
        required: true

jobs:
  build-scan-push:
    name: Build, Scan & Push
    runs-on: ubuntu-latest
    outputs:
      image_uri: ${{ steps.push.outputs.image_uri }}

    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ inputs.gcp_workload_identity_provider }}
          service_account: ${{ inputs.gcp_service_account }}

      - name: Configure Docker to use gcloud
        run: gcloud auth configure-docker europe-west1-docker.pkg.dev --quiet

      - name: Build Docker Image
        id: build
        run: |
          IMAGE_URI="europe-west1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ inputs.image_name }}:${{ github.sha }}"
          docker build -t ${IMAGE_URI} -f ${{ inputs.dockerfile_path }} .
          echo "image_uri=${IMAGE_URI}" >> $GITHUB_OUTPUT

      - name: Scan Docker Image for Vulnerabilities
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: ${{ steps.build.outputs.image_uri }}
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'HIGH,CRITICAL'

      - name: Push Docker Image to Artifact Registry
        id: push
        run: |
          docker push ${{ steps.build.outputs.image_uri }}
          echo "image_uri=${{ steps.build.outputs.image_uri }}" >> $GITHUB_OUTPUT
