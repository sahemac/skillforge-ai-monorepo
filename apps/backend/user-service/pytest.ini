[tool:pytest]
# Test discovery
testpaths = app/tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test options
addopts = 
    -v
    --strict-markers
    --strict-config
    --disable-warnings
    -ra
    --cov=app
    --cov-report=html:htmlcov
    --cov-report=term-missing
    --cov-report=xml
    --cov-fail-under=80

# Markers
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    auth: marks tests related to authentication
    users: marks tests related to user management
    companies: marks tests related to company management
    api: marks tests for API endpoints
    crud: marks tests for CRUD operations
    models: marks tests for database models
    security: marks tests for security features

# Test environment
env = 
    ENVIRONMENT = testing
    DATABASE_URL = sqlite+aiosqlite:///:memory:
    SECRET_KEY = test-secret-key-do-not-use-in-production
    ACCESS_TOKEN_EXPIRE_MINUTES = 30
    DEBUG = False

# Async support
asyncio_mode = auto

# Coverage configuration
[coverage:run]
source = app
omit = 
    app/tests/*
    app/__init__.py
    app/utils/templates/*
    */migrations/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

[coverage:html]
directory = htmlcov